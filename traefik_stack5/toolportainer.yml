version: '3.2'

services:

  agent:
    image: portainer/agent
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - ntw_front
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    #bypass, managed by Traefik
    #ports:
    #  - "9000:9000"
    volumes:
      - portainer_data:/data
    networks:
      - ntw_front
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role==manager]
      restart_policy:
        condition: on-failure
      resources:
        limits:
          cpus: '0.20'
          memory: 48M
        reservations:
          memory: 10M
      labels:
        - "traefik.backend=portainer"
        - "traefik.frontend.rule=PathPrefixStrip:/portainer"
        - "traefik.port=9000"
        - "traefik.enable=true"
        - "traefik.frontend.entryPoints=http"
        - "traefik.docker.network=ntw_front"
        - "traefik.weight=10"
        - "traefik.backend.loadbalancer.swarm=true"
        - "traefik.backend.loadbalancer.method=drr"
        # https://github.com/containous/traefik/issues/563#issuecomment-421360934
        - "traefik.frontend.redirect.regex=^(.*)/portainer$$"
        - "traefik.frontend.redirect.replacement=$$1/portainer/"
        - "traefik.frontend.rule=PathPrefix:/portainer;ReplacePathRegex: ^/portainer/(.*) /$$1"

networks:
  ntw_front:
    external: true

volumes:
  portainer_data:
